import React, { useEffect, useState } from 'react';
import { View, Text, Button, Alert, Image, StyleSheet, ScrollView, ActivityIndicator } from 'react-native';
import { fetchConfirmInfo, confirmPayment } from '../services/apiService';

const InfoPayment = ({ route, navigation }: any) => {
  const { firstName, lastName } = route.params;
  const [confirmData, setConfirmData] = useState<any>(null);
  const [loading, setLoading] = useState<boolean>(true);

  useEffect(() => {
    console.log('üì¶ Received Params in InfoPayment:', { firstName, lastName });
    if (firstName && lastName) {
      getConfirmInfo();
    }
  }, []);

  const getConfirmInfo = async () => {
    setLoading(true);
    try {
      const result = await fetchConfirmInfo(firstName, lastName);
      console.log('üì• API Response (fetchConfirmInfo):', result);
      if (Array.isArray(result) && result.length > 0) {
        setConfirmData(result[0]);
      } else {
        setConfirmData(null);
        console.warn('‚ùå No confirm info data');
      }
    } catch (error) {
      console.error('‚ùå Error fetching confirm info:', error);
      Alert.alert('Error', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÑ‡∏î‡πâ');
    } finally {
      setLoading(false);
    }
  };

  const handleConfirmPayment = async () => {
    try {
      await confirmPayment({ firstName, lastName });
      Alert.alert('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', [
        { text: '‡∏ï‡∏Å‡∏•‡∏á', onPress: () => navigation.goBack() }, // ‚úÖ ‡∏´‡∏•‡∏±‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
      ]);
    } catch (error) {
      console.error('‚ùå Error confirming payment:', error);
      Alert.alert('Error', '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      {loading ? (
        <ActivityIndicator size="large" color="#0000ff" />
      ) : confirmData ? (
        <>
          <Text style={styles.title}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</Text>

          <Text style={styles.label}>‡∏ä‡∏∑‡πà‡∏≠:</Text>
          <Text style={styles.value}>{confirmData.firstName} {confirmData.lastName}</Text>

          <Text style={styles.label}>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:</Text>
          <Text style={styles.value}>{confirmData.amountDue} ‡∏ö‡∏≤‡∏ó</Text>

          <Text style={styles.label}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô:</Text>
          <Text style={styles.value}>{confirmData.confirmDate}</Text>

          <Text style={styles.label}>‡πÄ‡∏ß‡∏•‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô:</Text>
          <Text style={styles.value}>{confirmData.confirmTime}</Text>

          <Text style={styles.label}>‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà:</Text>
          <Text style={styles.value}>{confirmData.officerName}</Text>

          <Text style={styles.label}>‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô:</Text>
          {confirmData.confirmImage ? (
            <Image
              source={{ uri: confirmData.confirmImage }}
              style={styles.image}
              resizeMode="contain"
            />
          ) : (
            <Text style={styles.value}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</Text>
          )}

          <View style={{ marginTop: 20 }}>
            <Button title="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô" onPress={handleConfirmPayment} />
          </View>
        </>
      ) : (
        <Text style={styles.errorText}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</Text>
      )}
    </ScrollView>
  );
};

export default InfoPayment;

const styles = StyleSheet.create({
  container: {
    padding: 20,
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
    color: '#0288D1',
  },
  label: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#666',
  },
  value: {
    fontSize: 16,
    marginBottom: 10,
    color: '#333',
  },
  image: {
    width: '100%',
    height: 200,
    marginTop: 10,
  },
  errorText: {
    fontSize: 16,
    color: 'red',
    textAlign: 'center',
  },
});
