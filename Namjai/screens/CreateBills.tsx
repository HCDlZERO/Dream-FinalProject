import React, { useState } from 'react';
import {
  View, Text, TextInput, Button, StyleSheet, ScrollView, Alert
} from 'react-native';
import { createBill } from '../services/apiService';

const CreateBills = ({ route, navigation }: any) => {
  const { officerId, users } = route.params; // üü° ‡∏£‡∏±‡∏ö users ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ HomeOfficerPage

  const [zone, setZone] = useState('');
  const [unitsMap, setUnitsMap] = useState<{ [numberId: string]: string }>({});

  const handleUnitChange = (numberId: string, value: string) => {
    setUnitsMap(prev => ({ ...prev, [numberId]: value }));
  };

  const handleSubmitAll = async () => {
    if (!zone) {
      Alert.alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Zone ‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    const today = new Date().toISOString().split('T')[0];

    try {
      for (const user of users) {
        const unitsUsed = parseFloat(unitsMap[user.numberId] || '0');

        if (unitsUsed <= 0) continue; // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢

        const payload = {
          numberId: user.numberId,
          collectionOfficerId: parseInt(officerId),
          billDate: today,
          unitsUsed: unitsUsed,
          amountDue: unitsUsed * 14 + 20,
          paymentStatus: 'Gray',
          zone: parseInt(zone)
        };

        console.log('üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•:', payload);
        await createBill(payload);
      }

      Alert.alert('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
      navigation.goBack();
    } catch (error) {
      console.error(error);
      Alert.alert('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÑ‡∏î‡πâ');
    }
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô</Text>

      <Text style={styles.label}>Zone</Text>
      <TextInput
        style={styles.input}
        keyboardType="numeric"
        value={zone}
        onChangeText={setZone}
      />

      {users.map((user: any) => (
        <View key={user.numberId} style={styles.userBlock}>
          <Text style={styles.userName}>{user.firstName} {user.lastName}</Text>
          <TextInput
            placeholder="‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥"
            keyboardType="numeric"
            style={styles.input}
            value={unitsMap[user.numberId] || ''}
            onChangeText={(val) => handleUnitChange(user.numberId, val)}
          />
        </View>
      ))}

      <Button title="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" onPress={handleSubmitAll} />
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center'
  },
  label: {
    fontSize: 16,
    marginBottom: 5,
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    padding: 8,
    marginBottom: 10,
    borderRadius: 5,
  },
  userBlock: {
    marginBottom: 15,
    borderBottomWidth: 1,
    borderColor: '#eee',
    paddingBottom: 10
  },
  userName: {
    fontSize: 16,
    marginBottom: 5,
  }
});

export default CreateBills;
